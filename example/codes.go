package main

import (
	"encoding/hex"
	"github.com/SealSC/SealEVM/environment"
	"github.com/SealSC/SealEVM/types"
)

type exampleCodes struct {
	initCode         []byte
	incCallInput     []byte
	counterCallInput []byte
}

func loadCodes() *exampleCodes {
	ret := &exampleCodes{}

	ret.initCode, _ = hex.DecodeString("6080604052348015600e575f5ffd5b506104648061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c806361bc221a14610038578063a792da5914610052575b5f5ffd5b6100405f5481565b60405190815260200160405180910390f35b610040610060366004610177565b5f60015f5f82825461007291906101e5565b90915550505f546040517f84fa11cd0353da7cf3201711842e07f8fdf6a488011edfc5b5d996318e339d55906100ab908690869061021d565b60405180910390a25f6040516100c09061016a565b604051809103905ff0801580156100d9573d5f5f3e3d5ffd5b506040517fc511373400000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff82169063c511373490610131908790879060040161021d565b5f604051808303815f87803b158015610148575f5ffd5b505af115801561015a573d5f5f3e3d5ffd5b505050505f549150505b92915050565b6101e38061024c83390190565b5f5f60208385031215610188575f5ffd5b823567ffffffffffffffff81111561019e575f5ffd5b8301601f810185136101ae575f5ffd5b803567ffffffffffffffff8111156101c4575f5ffd5b8560208284010111156101d5575f5ffd5b6020919091019590945092505050565b80820180821115610164577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b60208152816020820152818360408301375f818301604090810191909152601f909201601f1916010191905056fe6080604052348015600e575f5ffd5b506101c78061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063c51137341461002d575b5f5ffd5b61004061003b3660046100a9565b610042565b005b7f6d128f203c67be3b2d9bf1612fd59bdd6ae01f4f0d2ffedd05e76ab2a09b7f8a81604051610071919061015c565b60405180910390a150565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f602082840312156100b9575f5ffd5b813567ffffffffffffffff8111156100cf575f5ffd5b8201601f810184136100df575f5ffd5b803567ffffffffffffffff8111156100f9576100f961007c565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156101285761012861007c565b60405281815282820160200186101561013f575f5ffd5b816020840160208301375f91810160200191909152949350505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f8301168401019150509291505056fea2646970667358221220b56b2571e4f1e0a4702f321b9fb6f5d153287d29e69d352857032e833af6ffa564736f6c634300081c0033a2646970667358221220e022f9a3adc27590d19506df06f27361eae1cc42947169c1fcb103a7f169cf0e64736f6c634300081c0033")
	ret.incCallInput, _ = hex.DecodeString("a792da59000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000076578616d706c6500000000000000000000000000000000000000000000000000")
	ret.counterCallInput, _ = hex.DecodeString("61bc221a")

	return ret
}

func (e exampleCodes) InitCode() []byte {
	return e.initCode
}

func (e exampleCodes) IncreaseCallMessage(caller types.Address) *environment.Message {
	return &environment.Message{
		Caller: caller,
		Value:  nil,
		Data:   e.incCallInput,
	}
}

func (e exampleCodes) CounterCallMessage(caller types.Address) *environment.Message {
	return &environment.Message{
		Caller: caller,
		Value:  nil,
		Data:   e.counterCallInput,
	}
}
